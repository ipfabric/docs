variables:
  GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no -i "${CI_PROJECT_DIR}/.ssh/gitlab-ci"'
  GIT_STRATEGY: clone
  VALE_RELEASE: "https://github.com/errata-ai/vale/releases/download/v3.9.1/vale_3.9.1_Linux_64-bit.tar.gz"

image:
  name: registry.gitlab.com/ip-fabric/documentation/docs
  pull_policy: always

default:
  tags:
    - lowperf

build_main_pages:
  stage: deploy
  only:
    - main
  before_script:
    - git config --global user.email "devops+gl_ci_bot@ipfabric.io"
    - git config --global user.name "Bot IPFabric"
    - mkdir -pvm 0700 .ssh
    - echo "$ssh_deploy_key" > "$CI_PROJECT_DIR/.ssh/gitlab-ci"
    - chmod 0400 .ssh/gitlab-ci
    - git remote set-url origin "$(echo "$CI_REPOSITORY_URL" | sed -E 's#.*@([^/]+?(\:\d+)?)/#git@\1:#')"
  script:
    - git fetch origin gh-pages --depth=1
    - cp -v main_preamble.html overrides/main.html
    - mike deploy --config-file mkdocs_insiders.yml --push main

strict_build_mr:
  stage: build
  only:
    - merge_requests
  before_script:
    - env
    - pwd
    - git config --global user.email "devops+gl_ci_bot@ipfabric.io"
    - git config --global user.name "Bot IPFabric"
    - mkdir -pvm 0700 .ssh
    - echo "$ssh_deploy_key" > "$CI_PROJECT_DIR/.ssh/gitlab-ci"
    - chmod 0400 .ssh/gitlab-ci
  script:
    - export DOC_TARGET=`mktemp -d`
    - mkdocs build -d "$DOC_TARGET" --strict --config-file mkdocs_insiders.yml
    - rm -rf "$DOC_TARGET"
  artifacts:
    expire_in: 1 week
    paths:
      - temp_multirepo/

vale_mr:
  stage: test
  only:
    - merge_requests
  script:
    - make vale

seo_lint_mr:
  stage: test
  only:
    - merge_requests
  script:
    - ./.gitlab/description_lint

danger:
  stage: build
  image: ruby:3.0
  only:
    - merge_requests
  script:
    - printenv
    - gem install danger
    - gem install danger-gitlab
    - "ls -al"
    - export CI_MERGE_REQUEST_IID=${CI_OPEN_MERGE_REQUESTS#*!}
    - danger --fail-on-errors=true
